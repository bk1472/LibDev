#!/bin/bash

##############################################################################
# Terminal Color table
##############################################################################
_norm_="$(printf '\033[0m')"
_bold_="$(printf '\033[1m')"
_rred_="$(printf '\033[0;1;5;31m')"       # Reverse
_blak_="$(printf '\033[0;30m')"           # blac[k]  
__red_="$(printf '\033[0;31m')"           # [r]ed   
_gren_="$(printf '\033[0;32m')"           # [g]reen 
_yell_="$(printf '\033[0;33m')"           # [y]ellow
_blue_="$(printf '\033[0;34m')"           # [b]lue  
_purp_="$(printf '\033[0;35m')"           # [p]urple
_cyan_="$(printf '\033[0;36m')"           # [c]yan  
_gray_="$(printf '\033[0;37m')"           # gr[a]y  
_BLAK_="$(printf '\033[0;37m\033[40m')"   # blac[K]  
__RED_="$(printf '\033[0;37m\033[41m')"   # [R]ed   
_GREN_="$(printf '\033[0;30m\033[42m')"   # [G]reen 
_YELL_="$(printf '\033[0;30m\033[43m')"   # [Y]ellow
_BLUE_="$(printf '\033[0;37m\033[44m')"   # [B]lue  
_PURP_="$(printf '\033[0;37m\033[45m')"   # [P]urple
_CYAN_="$(printf '\033[0;30m\033[46m')"   # [C]yan  
_GRAY_="$(printf '\033[0;37m\033[40m')"   # gr[A]y  
export _norm_ _bold_ _rred_
export _blak_ __red_ _gren_ _yell_ _blue_ _purp_ _cyan_ _gray_
export _BLAK_ __RED_ _GREN_ _YELL_ _BLUE_ _PURP_ _CYAN_ _GRAY_


CONFIG_MK="./config/_config.mk"

ARCH=""

echo "========================================"
echo " ${_gren_}Select Architecture${_norm_}"
echo "========================================"

while true
do
	echo "------------------------------------"
	echo "<1> ${_cyan_}x64${_norm_}"
	echo "<2> ${__red_}aarch64${_norm_}"
	echo "<*> Exit this menu.(default: ${_cyan_}x64${_norm_})"
	echo "------------------------------------"
	echo -n "Input a Menu number : "
	if [ "$1" != "" ]; then
		value=$1
	else
		read value
	fi

	case $value in
		1) echo "Selected ${_cyan_}x64${_norm_} Architecture";
			ARCH="x64" ;;
		2) echo "Selected ${__red_}aarch64${_norm_} Architecture";
			ARCH="aarch64";;
		*) echo "Default selected ${_cyan_}x64${_norm_} Architecture";
			ARCH="x64" ;;
	esac
	break;
done

echo "###############################################################"       > ${CONFIG_MK}
echo "# Do not edit this file: automatically generated"                     >> ${CONFIG_MK}
echo "###############################################################"      >> ${CONFIG_MK}
echo "ARCH = ${ARCH}"                                                       >> ${CONFIG_MK}
echo "DEST_OS = linux"                                                      >> ${CONFIG_MK}
echo "HOST_OS = linux"                                                      >> ${CONFIG_MK}
if [ "${ARCH}" == "aarch64" ];then
	echo "CROSS_COMPILE = ${ARCH}-linux-gnu-"                               >> ${CONFIG_MK}
	echo "export CROSS_COMPILE"                                             >> ${CONFIG_MK}
fi
echo "export ARCH DEST_OS HOST_OS"                                          >> ${CONFIG_MK}
